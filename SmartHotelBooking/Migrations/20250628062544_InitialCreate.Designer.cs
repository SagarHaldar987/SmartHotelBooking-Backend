// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHotelBooking.Models;

#nullable disable

namespace SmartHotelBooking.Migrations
{
    [DbContext(typeof(HotelBookingContext))]
    [Migration("20250628062544_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartHotelBooking.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateOnly?>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<int?>("HotelID")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__73951ACD9ECA9EAB");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("Amenities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("ManagerID");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(3, 2)");

                    b.HasKey("HotelId")
                        .HasName("PK__Hotels__46023BBFCD0CB3DB");

                    b.HasIndex("ManagerId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.LoyaltyAccount", b =>
                {
                    b.Property<int>("LoyaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoyaltyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoyaltyId"));

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("PointsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("LoyaltyId")
                        .HasName("PK__LoyaltyA__8D45791339F8A040");

                    b.HasIndex("UserId");

                    b.ToTable("LoyaltyAccounts");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A583309245D");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Redemption", b =>
                {
                    b.Property<int>("RedemptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RedemptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RedemptionId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("PointsUsed")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RedemptionId")
                        .HasName("PK__Redempti__410680D11141F1C0");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Redemptions");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__74BC79AEDDEB2D44");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<bool?>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomId")
                        .HasName("PK__Rooms__328639195EAB362F");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC2901B3BD");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053494B1DD9B")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Booking", b =>
                {
                    b.HasOne("SmartHotelBooking.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__Bookings__RoomID__412EB0B6");

                    b.HasOne("SmartHotelBooking.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Bookings__UserID__403A8C7D");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Hotel", b =>
                {
                    b.HasOne("SmartHotelBooking.Models.User", "Manager")
                        .WithMany("Hotels")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__Hotels__ManagerI__3A81B327");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.LoyaltyAccount", b =>
                {
                    b.HasOne("SmartHotelBooking.Models.User", "User")
                        .WithMany("LoyaltyAccounts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__LoyaltyAc__UserI__4CA06362");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Payment", b =>
                {
                    b.HasOne("SmartHotelBooking.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Payments__Bookin__44FF419A");

                    b.HasOne("SmartHotelBooking.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Payments__UserID__440B1D61");

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Redemption", b =>
                {
                    b.HasOne("SmartHotelBooking.Models.Booking", "Booking")
                        .WithMany("Redemptions")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Redemptio__Booki__5070F446");

                    b.HasOne("SmartHotelBooking.Models.User", "User")
                        .WithMany("Redemptions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Redemptio__UserI__4F7CD00D");

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Review", b =>
                {
                    b.HasOne("SmartHotelBooking.Models.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK__Reviews__HotelID__48CFD27E");

                    b.HasOne("SmartHotelBooking.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__UserID__47DBAE45");

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Room", b =>
                {
                    b.HasOne("SmartHotelBooking.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK__Rooms__HotelID__3D5E1FD2");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Booking", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Redemptions");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Hotel", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("SmartHotelBooking.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Hotels");

                    b.Navigation("LoyaltyAccounts");

                    b.Navigation("Payments");

                    b.Navigation("Redemptions");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
